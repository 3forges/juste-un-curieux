---
import Ortf from "~/components/ortf.astro";
// import { TwitchPlayer } from "~/components/TwitchPlayer"; // <TwitchPlayer client:only="preact"/>
// import { TwitchPlayerX } from "~/components/TwitchPlayerX";

import { YoutubeLivestreamPlayer, YoutubePlaylist, YoutubeUpcomingVideo } from '~/components/YoutubeLivestreamPlayer'

// import GitHubCorner from "./github-corner.astro";
import TikTokCorner from "./tiktok-corner.astro"
//import GitHubCorner from "~/components/GithubCorner";

// //<GitHubCorner client:only="preact" />
// import SocialCorner from "~/components/SocialCorner";
// //<SocialCorner client:only="preact" />

import { all_youtube_channels } from "./../config"
import {YouTubeAutoBot}  from './../utils/videos/youtube/YouTubeAutoBot'
// let isTheYouTubeLiveOnGoing = false;
const youTubeAutoBot =  new YouTubeAutoBot(`${all_youtube_channels.histoire_russie.youtube.tests.channel_id}`)

const isTheYouTubeLiveOnGoing = await youTubeAutoBot.isThereAnOngoingLiveStream()
const isThereAnUpcomingLiveStream = await youTubeAutoBot.isThereAnUpcomingLiveStream()

/**
 * basically items[0] in the list
 */
let defaultUpcomingLiveStreamDetails = null
if (isThereAnUpcomingLiveStream) {
  defaultUpcomingLiveStreamDetails = await youTubeAutoBot.getDefaultUpcomingLiveStreamDetails()
}
/*

import axios from 'redaxios';
// use as you would normally

const HTTP_REQ_TO_GOOGLE_YOUTUBE_DATA_API = `https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${all_youtube_channels.histoire_russie.youtube.channel_id}&type=video&eventType=live&key=${youtube_data_api.THE_YOUTUBE_API_KEY}`
try {
  const response = await axios.get(`${HTTP_REQ_TO_GOOGLE_YOUTUBE_DATA_API}`);
  console.log(`Fetching Youtube Data API - response.data : `,response.data);
  console.log(`Fetching Youtube Data API - response.status : `, response.status);
  console.log(`Fetching Youtube Data API - response.statusText : `, response.statusText);
  console.log(`Fetching Youtube Data API - response.headers : `, response.headers);
  console.log(`Fetching Youtube Data API - response.config : `, response.config);
  isTheYouTubeLiveOnGoing = (response.data.items.length > 0)
  console.log(`Fetching Youtube Data API - [isTheYouTubeLiveOnGoing] - in the try statement : `, isTheYouTubeLiveOnGoing);
} catch (error) {
  // Handle error
  console.error(error);
}
*/
console.log(`[splash.astro] - [isTheYouTubeLiveOnGoing] : `, isTheYouTubeLiveOnGoing);
console.log(`[splash.astro] - [isThereAnUpcomingLiveStream] : `, isThereAnUpcomingLiveStream);
console.log(`[splash.astro] - [defaultUpcomingLiveStreamDetails] : `, defaultUpcomingLiveStreamDetails);
---

<section class="relative h-full bg-black">
  <TikTokCorner />
  <div class="relative grid h-full place-items-center grid-cols-1">
    <Ortf />

    {
      // <TwitchPlayerX channel="Justin_Curieux" client:only="preact" />
    }
    {
      isTheYouTubeLiveOnGoing?<YoutubeLivestreamPlayer youtube_channel_id={all_youtube_channels.histoire_russie.youtube.tests.channel_id} client:only="preact" client:visible />:((isThereAnUpcomingLiveStream && defaultUpcomingLiveStreamDetails)?<YoutubeUpcomingVideo upcoming_video_id={defaultUpcomingLiveStreamDetails.id} />:<YoutubePlaylist playlist_id={all_youtube_channels.histoire_russie.youtube.default_playlist_id} />)
    }
    
   </div>
</section>

<noscript>
  <style>
    #splash-bg-fallback {
      display: block;
    }
  </style>
</noscript>

<style>
  @keyframes float {
    0% {
      transform: translate3d(0, 0, 0);
    }

    100% {
      transform: translate3d(0, 30px, 0);
    }
  }

  #astronaut {
    animation: float linear 2.5s infinite alternate;
  }

  @media (prefers-reduced-motion: reduce) {
    #astronaut {
      @apply animate-none;
    }

    :global(#starfield) {
      @apply hidden;
    }

    #splash-bg-fallback {
      @apply block;
    }
  }
</style>

---
import { Icon } from "astro-icon";
import ThemeSwitcher from "~/components/theme-switcher.astro";
import type { NavItem } from "~/types";
import SocialCornerUp from "~/components/SocialCornerUp";
import LogoSVG from "~/components/LogoSVG";
import { Share2Icon } from "lucide-preact";
//import { collections } from "~/content/config";
import { socials } from "./SocialList";

const navOnAirItems: Array<NavItem> = [{ title: "ON AIR", url: "#" }];
const navItems: Array<NavItem> = [
  { title: "Bientôt", url: "#features" },
  { title: "Vidéos", url: "#showcase" },
];
---
{console.log("Astro: ",socials)}
{ /* console.log("Astro: ",socials[0].returnIcon({})) */ }
<header
  id="page-header"
  class="absolute bottom-0 z-20 flex w-full items-center justify-between border-b border-transparent px-3 py-2 text-white sm:px-3 sm:py-2 xl:px-8 xl:py-4"
>
  <a class="flex items-center gap-3 hover:!text-default" href="#">
    <h1 class="sr-only">Justin Curieux</h1>
    <style type="text/css">
      .st0 {
        display: none;
      }
      .st1 {
        display: inline;
        fill: none;
        stroke: #ff0000;
        stroke-width: 15;
        stroke-linecap: round;
        stroke-linejoin: round;
        stroke-miterlimit: 10;
      }
      .st2 {
        display: inline;
        fill: #ff0000;
      }
      .st3 {
        display: inline;
        fill: none;
        stroke: #ff0000;
        stroke-width: 13;
        stroke-linecap: round;
        stroke-linejoin: round;
        stroke-miterlimit: 10;
      }
      .st4 {
        display: inline;
      }
      .st5 {
        display: inline;
        fill: none;
        stroke: #ff0000;
        stroke-width: 14.22;
        stroke-miterlimit: 10;
      }
      .st6 {
        fill: #ff5d01;
      }
      .logo_livre {
        display: inline;
        fill: none;
        stroke: #ff0000;
        stroke-width: 14.22;
        stroke-miterlimit: 10;
      }
      path.logo_livre {
        stroke: black;
        fill: black;
      }
      polygon.logo_livre {
        stroke: black;
        fill: black;
      }
    </style>
    <LogoSVG />
    <Icon name="wordmark" class="hidden h-5 sm:block" />
  </a>

  <div>
    <!-- HORIZONTAL MENU -->
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navOnAirItems.map(({ title, url }) => (
              <li class="group m-4 inline-flex overflow-hidden rounded bg-gray-900 text-white">
                <span class="flex items-center justify-center bg-gradient-to-r from-teal-200 to-lime-200 px-3.5 py-2 text-white hover:bg-gradient-to-l hover:from-teal-200 hover:to-lime-200">
                  <span class="relative flex animate-jump animate-duration-[2000ms] animate-infinite ">
                    <span class="absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75" />
                    <span class="relative inline-flex h-3 w-3 animate-jump rounded-full bg-red-500 animate-duration-[2000ms] animate-infinite" />
                  </span>
                </span>
                <span class="bg-gradient-to-r from-purple-500 to-pink-500 py-2.5 pl-4 pr-5 hover:bg-gradient-to-l ">
                  <div class="text-small animate-typing overflow-hidden whitespace-nowrap border-r-4 border-r-white pr-5 font-bold text-white">
                    <span class="text-small text-transparent">- . </span>
                    {title}
                  </div>
                </span>
              </li>
            ))
          }

          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }

          <li class="sm:mr-10">
            <SocialCornerUp
              name="noburger"
              urlOfLinkToShare={`https://www.twitch.tv/Justin_Curieux`}
              menuShareItems={socials} 
              client:only="preact"
            />
          </li>
        </ul>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="sm:hidden"
        aria-label="Navigation"
      >
        <Icon pack="mdi" name="menu" class="h-8" />
      </button>
      <ThemeSwitcher />
    </div>

    <!-- HAMBURGER MENU -->
    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="fixed inset-0 bg-default px-8 py-4 text-default">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <Icon name="logomark" class="h-16" />
          </div>
          <nav>
            <ul class="flex flex-col place-items-center">
              {
                navOnAirItems.map(({ title, url }) => (
                  <li>
                    <a
                      href={url}
                      class="group inline-flex overflow-hidden rounded bg-gray-900 text-white"
                    >
                      <span class="flex items-center justify-center bg-gradient-to-r from-teal-200 to-lime-200 px-3.5 py-2 text-white hover:bg-gradient-to-l hover:from-teal-200 hover:to-lime-200">
                        <span class="relative flex h-3 w-3 animate-jump animate-duration-[2000ms] animate-infinite">
                          <span class="absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75" />
                          <span class="relative inline-flex h-3 w-3 animate-jump rounded-full bg-red-500 animate-duration-[2000ms] animate-infinite" />
                        </span>
                      </span>
                      <span class="bg-gradient-to-r from-purple-500 to-pink-500 py-2.5 pl-4 pr-5 hover:bg-gradient-to-l ">
                        <div class="text-small animate-typing overflow-hidden whitespace-nowrap border-r-4 border-r-white pr-5 font-bold text-white">
                          <span class="text-small text-transparent">- . </span>
                          {title}
                        </div>
                      </span>
                    </a>
                  </li>
                ))
              }
              {
                navItems.map(({ title, url }) => (
                  <li>
                    <a class="block py-4 text-center text-xl" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
              <li class="block py-4 text-center text-xl">
                <span class="flex flex-row items-center">
                  <Share2Icon
                    size={36}
                    strokeWidth={3}
                    stroke={`currentColor`}
                    viewBox={"-2 -4 32 32"}
                    alt="Share"
                    className="h-18 w-18 m-1 p-1 rounded-full"
                  />
                  Partager:
                </span>
              </li>
              <ul>
                {
                  socials.map((item) => {
                    // for astro console log
                    console.log("returnIcon: ", item.returnIcon())
                    return (
                      <li>
                        <a
                          href={item.link}
                          role="menuitem"
                          class={`block text-center`}
                          id={`user-menu-bottom-${item.label}`}
                        >
                          <span class="flex flex-row items-center">
                            <item.returnIcon
                              size={(item.label!="Discord")?48:36}
                              strokeWidth={2}
                              stroke={`currentColor`}
                              viewBox={(item.label!=="Discord")?"-2 -4 32 32":"0 0 640 512"}
                              alt="Share"
                              className={(item.label!=="Discord")?"h-20 w-20 m-1 items-center rounded-full p-1":"h-20 w-20 m-5 items-center rounded-full p-5"}
                            />
                            {item.label}
                          </span>
                        </a>
                      </li>
                    );
                  })
                }
              </ul>
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  // EVERY LISTENER INTO window.addEventListener("load", ... ) ??
  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });

  // FORCE BAR SYNCH ONLOAD
  window.addEventListener("load", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed bottom-auto top-0;
    @apply transition-all duration-200;
    @apply border-default bg-default text-default;
  }
  .modal.is-open {
    @apply block;
  }
</style>

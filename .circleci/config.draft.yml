
version: "2.1"

parameters:
  dockerize_me:
    type: boolean
    default: false
  pokus_nodejs_version:
    type: string
    default: "18.17.1"
  ci_workspace_root:
    type: string
    default: ".ci.workspace" # /.ci.workspace/workspace
  # --- 
  # npm_publish_auth_secret_* are credentials to 
  # be able to publish to [https://npmjs.org] 
  # 
  npm_publish_auth_secret_user:
    type: string
    default: "pokus"
  npm_publish_auth_secret_pwd:
    type: string
    default: "pokus"
  dockerhub_auth_secret_user:
    type: string
    default: "pokus"
  dockerhub_auth_secret_pwd:
    type: string
    default: "pokus"


jobs:
  pr_unit_tests:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
    # resource_class: pokusio/podman-small1
    environment:
      BASH_ENV: /home/circleci/.profile
      CHECK_WORKSPACE_FULLPATH: /<< pipeline.parameters.ci_workspace_root >>/workspace
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Env Setup"
          command: |
              touch "$BASH_ENV"
              echo 'export GIT_SHA1="$CIRCLE_SHA1"' >> "$BASH_ENV"
              echo "Check env : CHECK_WORKSPACE_FULLPATH= [${CHECK_WORKSPACE_FULLPATH}]"
      - run:
          name: "Resolve System dependencies"
          command: |
              # install pnpm
              curl -fsSL https://get.pnpm.io/install.sh | sh -
              # install surge
              pnpm add -g surge
              pnpm --version
              surge --version
      - checkout
      - run:
          name: "Resolve Astro Project Dependencies"
          command: |
              pnpm i
      - run:
          name: "Run Unit Tests"
          command: | 
              cd ${POKUS_PRJ_DIR}
              echo "POKUS_PRJ_DIR=[${POKUS_PRJ_DIR}]"
              pwd
              pnpm run tests || true
  pr_astro_build:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
    # resource_class: pokusio/podman-small1
    environment:
      BASH_ENV: /home/circleci/.profile
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Run Astro Build"
          command: |
              pnpm run build
      - persist_to_workspace:
          root: .ci.workspace
          paths:
            - dist
          # # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # # taken to be the root directory of the workspace.
          # root: workspace
          # # Must be relative path from root
          # paths:
          #   - echo-output
  pr_deployment:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
    # resource_class: pokusio/podman-small1
    environment:
      BASH_ENV: /home/circleci/.profile
      PR_BRANCH_NAME: /home/circleci/.profile
      ASTRO_BUILD_DIR: /<< pipeline.parameters.ci_workspace_root >>/workspace/dist/
    steps:
      # <<: *pokus-common-steps
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /<< pipeline.parameters.ci_workspace_root >>/workspace
      - run:
          name: "Configure Auth for surge.sh"
          command: |
            echo "SURGE_USER = [${SURGE_USER}]"
            echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
            echo " Content of the ASTRO_BUILD_DIR : "
            ls -alh ${ASTRO_BUILD_DIR}
            echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
            ls -alh ${ASTRO_BUILD_DIR}
            cat <<EOF >./.generated.netrc
            machine surge.surge.sh
                login ${SURGE_USER}
                password ${SURGE_SECRET}
            EOF
            bash -c 'cat ./.generated.netrc | tee -a ~/.netrc'
            echo "surge whoami"
            surge whoami
      - run:
          name: "Deploy PR to surge.sh"
          command: |
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
              echo "   "
              surge ./dist/ "justincurieux_${PR_BRANCH_NAME}.surge.sh"
              echo "   "
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
              echo " Your deployment is ready at https://justincurieux_${PR_BRANCH_NAME}.surge.sh "
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
      - run:
          name: "Send Discord notification"
          command: |
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
              echo "   Send dicord notification"
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"

  e2e_tests_justincurieux:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
    # resource_class: pokusio/podman-small1
    environment:
      BASH_ENV: /home/circleci/.profile
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Install System Dependencies"
          command: |
              npm init playwright@latest
      - run:
          name: "Run e2e Tests"
          command: |
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
              echo "   "
              echo "   Run e2e Tests"
              echo "   "
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
              echo "   "
              echo "   No e2e Tests executed yet."
              echo "   We will run here https://playwright.dev tests"
              echo "   "
              echo "# +=+== +=+== +=+== +=+== +=+== +=+== #"
              pnpm dlx playwright test
              # npx playwright test

  release_deployment:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
    # resource_class: pokusio/podman-small1
    environment:
      BASH_ENV: /home/circleci/.profile
      RELEASE_TAG: << pipeline.git.tag >>
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Run Release Preps"
          command: |
              echo "RELEASE_TAG = [${RELEASE_TAG}]"
              echo "Run release preps: tools and system dependencies installation"
              
workflows:
  version: 2.1
  pull_requests:
    # when: 
    #   not: << pipeline.parameters.dockerize_me >> 
    jobs:
      - pr_unit_tests
      - build_justincurieux:
          requires:
            - pr_unit_tests
      - e2e_tests_justincurieux:
          requires:
            - build_justincurieux
      - approve_deployment: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires:
            - e2e_tests_justincurieux
      - pr_deployment:
          context: cicd-orchestrator
          filters:
            branches:
              ignore:
                - master
                - develop
                # ---
                - /^feature\/.*/
                - /^support\/.*/
                - /^bugfix\/.*/
                - /^hotfix\/.*/
                - /^release\/.*/
                # ---
            tags:
              # only: /^v.*/
              only:
                - /^[0-9]+.[0-9]+.[0-9]+/
                - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                - /^[0-9]+.[0-9]+.[0-9]+-beta/
          requires:
            - approve_deployment

  staging:
    # --- --- 
    # I created with the Circle CI Web UI, the Schedule named "staging_deployment" 
    #  https://circleci.com/docs/scheduled-pipelines/#get-started-with-scheduled-pipelines
    #  https://circleci.com/docs/schedule-pipelines-with-multiple-workflows/
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ staging_deployment, << pipeline.schedule.name >> ]
        - equal: [ develop, << pipeline.git.branch >> ]
    jobs:
      - pr_unit_tests
      - build_justincurieux:
          requires:
            - pr_unit_tests
      - e2e_tests_justincurieux:
          requires:
            - build_justincurieux
      - approve_deployment: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires:
            - e2e_tests_justincurieux
      - pr_deployment:
          context: cicd-orchestrator
          requires:
            - approve_deployment

  release:
    # --- --- 
    #  About "pipeline.trigger_source", see https://circleci.com/docs/pipeline-variables/#pipeline-values
    # 
    when:
      and:
        - equal: [ webhook, << pipeline.trigger_source >> ]
        - equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - release_unit_tests:
          filters:
            branches:
              ignore:
                - master
                - develop
                # ---
                - /^feature\/.*/
                - /^support\/.*/
                - /^bugfix\/.*/
                - /^hotfix\/.*/
                - /^release\/.*/
                # ---
            tags:
              # only: /^v.*/
              only:
                - /^[0-9]+.[0-9]+.[0-9]+/
                - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                - /^[0-9]+.[0-9]+.[0-9]+-beta/
      - build_justincurieux:
          requires:
            - pr_unit_tests
          filters:
            branches:
              ignore:
                - master
                - develop
                # ---
                - /^feature\/.*/
                - /^support\/.*/
                - /^bugfix\/.*/
                - /^hotfix\/.*/
                - /^release\/.*/
                # ---
            tags:
              # only: /^v.*/
              only:
                - /^[0-9]+.[0-9]+.[0-9]+/
                - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                - /^[0-9]+.[0-9]+.[0-9]+-beta/
      - e2e_tests_justincurieux:
          requires:
            - build_justincurieux
          filters:
            branches:
              ignore:
                - master
                - develop
                # ---
                - /^feature\/.*/
                - /^support\/.*/
                - /^bugfix\/.*/
                - /^hotfix\/.*/
                - /^release\/.*/
                # ---
            tags:
              # only: /^v.*/
              only:
                - /^[0-9]+.[0-9]+.[0-9]+/
                - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                - /^[0-9]+.[0-9]+.[0-9]+-beta/
      - approve_release: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires:
            - e2e_tests_justincurieux
          filters:
            branches:
              ignore:
                - master
                - develop
                # ---
                - /^feature\/.*/
                - /^support\/.*/
                - /^bugfix\/.*/
                - /^hotfix\/.*/
                - /^release\/.*/
                # ---
            tags:
              # only: /^v.*/
              only:
                - /^[0-9]+.[0-9]+.[0-9]+/
                - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                - /^[0-9]+.[0-9]+.[0-9]+-beta/
      - pr_deployment:
          context: cicd-orchestrator
          filters:
            branches:
              ignore:
                - master
                - develop
                # ---
                - /^feature\/.*/
                - /^support\/.*/
                - /^bugfix\/.*/
                - /^hotfix\/.*/
                - /^release\/.*/
                # ---
            tags:
              # only: /^v.*/
              only:
                - /^[0-9]+.[0-9]+.[0-9]+/
                - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                - /^[0-9]+.[0-9]+.[0-9]+-beta/
          requires:
            - approve_release





















#   justincurieux_containers_ci:
#     when: << pipeline.parameters.dockerize_me >> 
#     jobs:
#       - docker_build_justincurieux:
#           oci_gun_registry: docker.io
#           oci_gun_org: pokusio.io
#           oci_gun_project: go-hello-pokus
#           oci_gun_tag: 0.0.1
#       - approve_docker_push: # <<< A job that will require manual approval in the CircleCI web application.
#           type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
#           requires:
#             - docker_build_justincurieux
#       - docker_push_justincurieux:
#           oci_gun_registry: docker.io
#           oci_gun_org: pokusio.io
#           oci_gun_project: go-hello-pokus
#           oci_gun_tag: 0.0.1
#           requires:
#             - approve_docker_push








# -------------------------------------
#  Workspaces
# https://circleci.com/docs/workspaces/
# -------------------------------------
# -------------------------------------
# CI Container Images
#  https://hub.docker.com/r/cimg/node/tags
# 
# -------------------------------------
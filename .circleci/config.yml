
version: "2.1"

parameters:
  dockerize_me:
    type: boolean
    default: false
  pokus_nodejs_version:
    type: string
    # default: "18.17.1"
    default: "lts-bookworm"
  ci_workspace_root:
    type: string
    default: ".ci.workspace" # /.ci.workspace/workspace
  # --- 
  # npm_publish_auth_secret_* are credentials to 
  # be able to publish to [https://npmjs.org] 
  # 
  npm_publish_auth_secret_user:
    type: string
    default: "pokus"
  npm_publish_auth_secret_pwd:
    type: string
    default: "pokus"
  dockerhub_auth_secret_user:
    type: string
    default: "pokus"
  dockerhub_auth_secret_pwd:
    type: string
    default: "pokus"


jobs:
  pr_unit_tests:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      # - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
      - image: node:<< pipeline.parameters.pokus_nodejs_version >>
      
    # resource_class: pokusio/podman-small1
    environment:
      # BASH_ENV: /home/circleci/.profile
      # BASH_ENV: ~/.profile
      # BASH_ENV: ${HOME}/.profile
      PNPM_VERSION: 7.5.1
      SHELL: /bin/bash
      CHECK_WORKSPACE_FULLPATH: /<< pipeline.parameters.ci_workspace_root >>/workspace
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Resolve System dependencies"
          command: |
              apt-get update -y && apt-get install -y  bash curl jq wget
      - run:
          name: "Env Setup"
          command: |
              # mkdir -p /home/circleci/
              # mkdir -p ${HOME}
              whoami
              pwd
              mkdir -p ${HOME}
              touch $BASH_ENV
              echo 'export SHELL=/bin/bash' >> "$BASH_ENV"
              echo 'export GIT_SHA1="$CIRCLE_SHA1"' >> "$BASH_ENV"
              export ASTRO_BUILD_DIR="${CI_WORKSPACE_ROOT}/workspace/dist"
              echo "export ASTRO_BUILD_DIR=${ASTRO_BUILD_DIR}" >> "$BASH_ENV"
              echo ""
              
      - checkout
      - run:
          name: "Install CI Job dependencies"
          command: |
              source $BASH_ENV
              apt-get update -y && apt-get install -y  bash curl jq wget
              # install pnpm
              bash -c 'curl -fsSL https://get.pnpm.io/install.sh | sh -'
              # PNPM_VERSION: 7.5.1
              bash -c "curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=${PNPM_VERSION} sh -"
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.bashrc
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.bashrc
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.profile
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.profile
              cat ./.circleci/assets/pnpm/.bashrc.addon >> "$BASH_ENV"
              # install surge
              source $BASH_ENV
              pnpm add -g surge
              # bash -c 'pnpm add -g surge'
              pnpm --version
              # bash -c 'pnpm --version'
              surge --version
      - run:
          name: "Resolve Astro Project Dependencies"
          command: |
              pnpm i
      - run:
          name: "Run Unit Tests"
          command: |
              pwd
              pnpm run tests || true
  pr_astro_build:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      # - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
      - image: node:<< pipeline.parameters.pokus_nodejs_version >>
    working_directory: /root/project
    # resource_class: pokusio/podman-small1
    environment:
      PNPM_VERSION: 7.5.1
      # BASH_ENV: /home/circleci/.profile
      # BASH_ENV: ~/.profile
      # BASH_ENV: ${HOME}/.profile
      SHELL: /bin/bash
      CHECK_WORKSPACE_FULLPATH: /<< pipeline.parameters.ci_workspace_root >>/workspace
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Resolve System dependencies"
          command: |
              apt-get update -y && apt-get install -y  bash curl jq wget
      - run:
          name: "Env Setup"
          command: |
              # mkdir -p /home/circleci/
              # mkdir -p ${HOME}
              whoami
              pwd
              mkdir -p ${HOME}
              touch $BASH_ENV
              echo 'export SHELL=/bin/bash' >> "$BASH_ENV"
              echo 'export GIT_SHA1="$CIRCLE_SHA1"' >> "$BASH_ENV"
              export ASTRO_BUILD_DIR="${CI_WORKSPACE_ROOT}/workspace/dist"
              echo "export ASTRO_BUILD_DIR=${ASTRO_BUILD_DIR}" >> "$BASH_ENV"
              echo ""
              
      - checkout
      - run:
          name: "Install CI Job dependencies"
          command: |
              source $BASH_ENV
              apt-get update -y && apt-get install -y  bash curl jq wget
              # install pnpm
              bash -c 'curl -fsSL https://get.pnpm.io/install.sh | sh -'
              # PNPM_VERSION: 7.5.1
              bash -c "curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=${PNPM_VERSION} sh -"
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.bashrc
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.bashrc
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.profile
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.profile
              cat ./.circleci/assets/pnpm/.bashrc.addon >> "$BASH_ENV"
              # install surge
              source $BASH_ENV
              pnpm add -g surge
              # bash -c 'pnpm add -g surge'
              pnpm --version
              # bash -c 'pnpm --version'
              surge --version
      - run:
          name: "Resolve Astro Project Dependencies"
          command: |
              pnpm i
      - run:
          name: "Run Astro Build"
          command: |
              pnpm run build
      - run:
          name: "pnpm root path"
          command: |
              pnpm root path
              # mkdir -p /root/project/.ci.workspace
              # touch /root/project/.ci.workspace/galileo.astro
      - persist_to_workspace:
          root: /root/project
          # root: /root/project/.ci.workspace
          paths:
            - dist
            - node_modules
      - persist_to_workspace:
          root: /root/.local/share
          paths:
            - pnpm
          # # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # # taken to be the root directory of the workspace.
          # root: workspace
          # # Must be relative path from root
          # paths:
          #   - echo-output
  pr_deployment:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      # - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
      - image: node:<< pipeline.parameters.pokus_nodejs_version >>
      
    # resource_class: pokusio/podman-small1
    environment:
      PNPM_VERSION: 7.5.1
      SHELL: /bin/bash
      BASH_ENV: /home/circleci/.profile
      PR_BRANCH_NAME: ${CIRCLE_BRANCH}
      # CI_WORKSPACE_ROOT: << pipeline.parameters.ci_workspace_root >>
      # CI_WORKSPACE_ROOT: /.ci.workspace
      CI_WORKSPACE_ROOT: /root/project
      # ASTRO_BUILD_DIR: /<< pipeline.parameters.ci_workspace_root >>/workspace/dist/
      SURGE_USER: $SURGE_USER
      SURGE_SECRET: $SURGE_SECRET
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Resolve System dependencies"
          command: |
            apt-get update -y && apt-get install -y  bash curl jq wget
      - run:
          name: "Env Setup"
          command: |
            # mkdir -p /home/circleci/
            # mkdir -p ${HOME}
            whoami
            pwd
            mkdir -p ${HOME}
            touch $BASH_ENV
            echo 'export SHELL=/bin/bash' >> "$BASH_ENV"
            echo 'export GIT_SHA1="$CIRCLE_SHA1"' >> "$BASH_ENV"
            export ASTRO_BUILD_DIR="${CI_WORKSPACE_ROOT}/workspace/dist"
            echo "export ASTRO_BUILD_DIR=${ASTRO_BUILD_DIR}" >> "$BASH_ENV"
            echo ""
      - checkout
      - run:
          name: "Install CI Job dependencies"
          command: |
            source $BASH_ENV
            apt-get update -y && apt-get install -y  bash curl jq wget
            # install pnpm
            bash -c 'curl -fsSL https://get.pnpm.io/install.sh | sh -'
            # PNPM_VERSION: 7.5.1
            bash -c "curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=${PNPM_VERSION} sh -"
            cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.bashrc
            cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.bashrc
            cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.profile
            cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.profile
            cat ./.circleci/assets/pnpm/.bashrc.addon >> "$BASH_ENV"
            # install surge
            source $BASH_ENV
            pnpm add -g surge
            # bash -c 'pnpm add -g surge'
            pnpm --version
            # bash -c 'pnpm --version'
            surge --version
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          # at: /${CI_WORKSPACE_ROOT}/workspace/dist
          # at: /.ci.workspace/workspace
          at: /root/project/workspace
      - run:
          name: "Display SURGE_USER"
          command: |
            echo $SURGE_USER
      - run:
          name: "Configure Auth for surge.sh"
          command: |
            echo ' ------------------------------------------------------- '
            echo " Content of the ASTRO_BUILD_DIR=[${ASTRO_BUILD_DIR}] : "
            ls -alh ${ASTRO_BUILD_DIR}
            echo ' ------------------------------------------------------- '
            ls -alh ${ASTRO_BUILD_DIR}
            rm ./.generated.netrc || true
            cp ./.circleci/assets/surge/.template.netrc ./.generated.netrc
            export SURGE_USER='jean.baptiste.lasselle.pokus@gmail.com'
            sed -i "s~SURGE_USER_PLACEHODER~${SURGE_USER}~g" ./.generated.netrc
            sed -i "s~SURGE_SECRET_PLACEHODER~${SURGE_SECRET}~g" ./.generated.netrc
            bash -c 'cat ./.generated.netrc | tee -a ~/.netrc'
            echo ' ------------------------------------------------------- '
            echo "   "
            echo "surge whoami"
            echo "   "
            echo ' ------------------------------------------------------- '
            echo "   "
            surge whoami
            echo "   "
            echo ' ------------------------------------------------------- '
      - run:
          name: "Deploy PR to surge.sh"
          command: |
            echo ' ------------------------------------------------------- '
            echo "   "
            surge ${ASTRO_BUILD_DIR} "https://justincurieux_${PR_BRANCH_NAME}.surge.sh"
            echo "   "
            echo ' ------------------------------------------------------- '
            echo " Your deployment is ready at https://justincurieux_${PR_BRANCH_NAME}.surge.sh "
            echo ' ------------------------------------------------------- '
      - run:
          name: "Send Discord notification"
          command: |
              echo ' ------------------------------------------------------- '
              echo "   Send dicord notification"
              echo ' ------------------------------------------------------- '

  e2e_tests_justincurieux:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      # - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
      - image: node:<< pipeline.parameters.pokus_nodejs_version >>
    # resource_class: pokusio/podman-small1
    environment:
      PNPM_VERSION: 7.5.1
      SHELL: /bin/bash
      BASH_ENV: /home/circleci/.profile
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Resolve System dependencies"
          command: |
              apt-get update -y && apt-get install -y  bash curl jq wget
      - run:
          name: "Env Setup"
          command: |
              # mkdir -p /home/circleci/
              # mkdir -p ${HOME}
              whoami
              pwd
              mkdir -p ${HOME}
              touch $BASH_ENV
              echo 'export SHELL=/bin/bash' >> "$BASH_ENV"
              echo 'export GIT_SHA1="$CIRCLE_SHA1"' >> "$BASH_ENV"
              export ASTRO_BUILD_DIR="${CI_WORKSPACE_ROOT}/workspace/dist"
              echo "export ASTRO_BUILD_DIR=${ASTRO_BUILD_DIR}" >> "$BASH_ENV"
              echo ""
              
      - checkout
      - run:
          name: "Install CI Job dependencies"
          command: |
              source $BASH_ENV
              apt-get update -y && apt-get install -y  bash curl jq wget
              # install pnpm
              bash -c 'curl -fsSL https://get.pnpm.io/install.sh | sh -'
              # PNPM_VERSION: 7.5.1
              bash -c "curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=${PNPM_VERSION} sh -"
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.bashrc
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.bashrc
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a /root/.profile
              cat ./.circleci/assets/pnpm/.bashrc.addon | tee -a ~/.profile
              cat ./.circleci/assets/pnpm/.bashrc.addon >> "$BASH_ENV"
              # install surge
              source $BASH_ENV
              pnpm add -g surge
              # bash -c 'pnpm add -g surge'
              pnpm --version
              # bash -c 'pnpm --version'
              surge --version
      - run:
          name: "Install Tests Dependencies"
          command: |
              npm init playwright@latest
              # Install Playwright browsers (can be done manually via 'npx playwright install')?
              pnpm dlx playwright install
      - run:
          name: "Run e2e Playwright Tests"
          command: |
              echo ' ------------------------------------------------------- '
              echo "   "
              echo "   Run e2e Playwright Tests"
              echo "   "
              echo ' ------------------------------------------------------- '
              echo "   "
              echo "   No e2e Tests executed yet."
              echo "   We will run here https://playwright.dev tests"
              echo "   "
              echo ' ------------------------------------------------------- '
              pnpm dlx playwright test
              # npx playwright test
      - run:
          name: "Run e2e Cypress Tests"
          command: |
              echo ' ------------------------------------------------------- '
              echo "   "
              echo "   Run e2e Cypress Tests"
              echo "   "
              echo ' ------------------------------------------------------- '
      - run:
          name: "Run UI Components Tests : Storybook"
          command: |
              echo ' ------------------------------------------------------- '
              echo "   "
              echo "   Run e2e Storybook Tests"
              echo "   see https://storybook.js.org/blog/ui-testing-playbook/"
              echo ' ------------------------------------------------------- '
      - run:
          name: "Deploy All Tests Reports as static website"
          command: |
              echo ' ------------------------------------------------------- '
              echo "   "
              echo "   Deploy All Tests Reports as static website"
              echo "   "
              echo ' ------------------------------------------------------- '
      - run:
          name: "Discord Notifiations"
          command: |
              echo ' ------------------------------------------------------- '
              echo "   "
              echo "   Discord Notifiations"
              echo "   "
              echo ' ------------------------------------------------------- '

  release_deployment:
    # <<: *pokus-jobs-common
    docker:
      # ---
      #  https://hub.docker.com/r/cimg/node/tags
      # ---
      # - image: cimg/go:<< pipeline.parameters.pokus_golang_version >>
      # - image: cimg/node:<< pipeline.parameters.pokus_nodejs_version >>
      - image: node:<< pipeline.parameters.pokus_nodejs_version >>
      
    # resource_class: pokusio/podman-small1
    environment:
      PNPM_VERSION: 7.5.1
      SHELL: /bin/bash
      # BASH_ENV: /home/circleci/.profile
      RELEASE_TAG: << pipeline.git.tag >>
    steps:
      # <<: *pokus-common-steps
      - run:
          name: "Run Release Preps"
          command: |
              echo "RELEASE_TAG = [${RELEASE_TAG}]"
              echo "Run release preps: tools and system dependencies installation"
              
workflows:
  version: 2.1
  pull_requests:
    # when: 
    #   not: << pipeline.parameters.dockerize_me >> 
    jobs:
      - pr_unit_tests
      - pr_astro_build:
          requires:
            - pr_unit_tests
      - e2e_tests_justincurieux:
          requires:
            - pr_astro_build
      - approve_deployment: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires:
            - e2e_tests_justincurieux
      - pr_deployment:
          requires:
            - approve_deployment
      # - pr_deployment:
      #     context: cicd-orchestrator
      #     filters:
      #       branches:
      #         only:
      #           # - master
      #           # - develop
      #           # ---
      #           - /^feature\/.*/
      #           - /^support\/.*/
      #           - /^bugfix\/.*/
      #           - /^hotfix\/.*/
      #           # - /^release\/.*/
      #           # ---
      #       tags:
      #         # only: /^v.*/
      #         only:
      #           - /^[0-9]+.[0-9]+.[0-9]+/
      #           - /^[0-9]+.[0-9]+.[0-9]+-alpha/
      #           - /^[0-9]+.[0-9]+.[0-9]+-beta/
      #     requires:
      #       - approve_deployment




# -------------------------------------
#  Workspaces
# https://circleci.com/docs/workspaces/
# -------------------------------------
# -------------------------------------
# CI Container Images
#  https://hub.docker.com/r/cimg/node/tags
#  https://hub.docker.com/_/node/tags?page=1&name=book
# -------------------------------------